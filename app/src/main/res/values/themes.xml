<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Base.Theme.MaterialThemeBuilder" parent="Theme.MaterialComponents.DayNight">
        <item name="android:statusBarColor" tools:ignore="NewApi">?attr/colorPrimaryVariant</item>
        <item name="android:windowLightStatusBar" tools:ignore="NewApi">false</item>
        <item name="android:navigationBarColor" tools:ignore="NewApi">?android:attr/colorBackground</item>
        <item name="android:windowLightNavigationBar" tools:ignore="NewApi">true</item>
        <item name="android:navigationBarDividerColor" tools:ignore="NewApi">?attr/colorControlHighlight</item>
        <item name="android:windowDisablePreview">true</item>
    </style>


    <style name="Theme.WeatherApp" parent="Base.Theme.MaterialThemeBuilder">
        <!--colorPrimary colors map to components and elements, such as app bars and buttons. -->
        <item name="colorPrimary">@color/purple_500</item>
        <!--A tonal variation of the primary color.-->
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <!--colorSecondary colors are most often used as accents on components, such as FABs and selection controls.-->
        <item name="colorSecondary">@color/teal_200</item>
        <!--A tonal variation of the secondary color. -->
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <!--colorBackground appears behind scrollable content and is used for the default window background. -->
        <!--<item name="android:colorBackground">@color/white_50</item>-->
        <!--<item name="android:windowBackground">@drawable/engage_bg_gradient</item>-->
        <!-- colorSurface is mapped to the surface of components such as cards, sheets and menus.-->
        <item name="colorSurface">@color/white</item>
        <!--colorError is used to indicate an error state for components such as text fields.-->
        <item name="colorError">@color/red_400</item>

        <!--"On" colors define how text, icons and strokes are colored in relation to the surface on which they appear.-->
        <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of the primary color. -->
        <item name="colorOnPrimary">@color/white</item>
        <!--A color that passes accessibility guidelines for text/iconography when drawn on top of the secondary color.-->
        <item name="colorOnSecondary">@color/black</item>
        <item name="colorOnBackground">@color/black</item>
        <item name="colorOnSurface">@color/black</item>
        <item name="colorOnError">@color/white</item>
        <item name="android:itemTextAppearance">@style/PopupMenuTextAppearance</item>
        <item name="toolbarStyle">@style/ThemeOverlay.Toobar</item>


</style>

    <style name="ThemeOverlay.Toobar" parent="Widget.MaterialComponents.Toolbar.PrimarySurface">

        <!-- Text color -->
        <item name="android:editTextColor">?attr/colorOnPrimary</item>
        <!-- Hint text color -->
        <item name="android:textColorHint">?attr/colorOnPrimary</item>
    </style>


    <style name="MyActionBarWidgetTheme">
        <item name="android:textColorSecondary">@android:color/white</item>
    </style>

    <style name="PopupMenuTextAppearance" parent="TextAppearance.AppCompat.Menu">
        <item name="android:textColor">?attr/colorOnBackground</item>
    </style>


    <!-- <style name="ToolBarStyle" parent="Theme.AppCompat">
         <item name="android:textColorPrimary">@android:color/white</item>
         <item name="android:textColorSecondary">@android:color/white</item>
         <item name="menuic">@android:color/white</item>
         <item name="android:dropDownItemStyle">@style/myDropDownItemStyle</item>
         <item name="android:dropDownListViewStyle">@style/myDropDownListViewStyle</item>
     </style>


     <style name="myDropDownItemStyle" parent="Widget.AppCompat.DropDownItem.Spinner">
         <item name="android:textColor">@color/secondary_text_default_material_light</item>
         <item name="android:textSize">14dp</item>
     </style>

     <style name="myDropDownListViewStyle" parent="Widget.AppCompat.ListView.DropDown">
         <item name="android:background">#000</item>
     </style>-->
</resources>