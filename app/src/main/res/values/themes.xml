<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Base.Theme.MaterialThemeBuilder" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <item name="android:statusBarColor" tools:ignore="NewApi">@color/weather_prim_500</item>
        <item name="android:windowLightStatusBar" tools:ignore="NewApi">false</item>
        <item name="android:navigationBarColor" tools:ignore="NewApi">?android:attr/colorBackground</item>
        <item name="android:windowLightNavigationBar" tools:ignore="NewApi">true</item>
        <item name="android:navigationBarDividerColor" tools:ignore="NewApi">?attr/colorControlHighlight</item>
        <item name="android:windowDisablePreview">true</item>
    </style>

    <style name="Theme.WeatherApp" parent="Base.Theme.MaterialThemeBuilder">
        <item name="colorIcon">@color/weather_prim_analogous_900</item>
        <item name="colorIconVariant">@color/weather_sec_800</item>
        <item name="colorSelection">@color/weather_prim_200</item>
        <!--colorPrimary colors map to components and elements, such as app bars and buttons. -->
        <item name="colorPrimary">@color/weather_prim_500</item>
        <!--A tonal variation of the primary color.-->
        <item name="colorPrimaryVariant">@color/weather_prim_900</item>
        <!--colorSecondary colors are most often used as accents on components, such as FABs and selection controls.-->
        <item name="colorSecondary">@color/weather_sec_200</item>
        <!--A tonal variation of the secondary color. -->
        <item name="colorSecondaryVariant">@color/weather_sec_500</item>
        <!--colorBackground appears behind scrollable content and is used for the default window background. -->
        <!--<item name="android:colorBackground">@color/weather_bg</item>-->
        <item name="android:windowBackground">@drawable/weather_bg_gradient</item>
        <!-- colorSurface is mapped to the surface of components such as cards, sheets and menus.-->
        <item name="colorSurface">@color/weather_prim_50</item>
        <!--colorError is used to indicate an error state for components such as text fields.-->
        <item name="colorError">@color/weather_prim_error_600</item>

        <!--"On" colors define how text, icons and strokes are colored in relation to the surface on which they appear.-->
        <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of the primary color. -->
        <item name="colorOnPrimary">@color/white</item>
        <!--A color that passes accessibility guidelines for text/iconography when drawn on top of the secondary color.-->
        <item name="colorOnSecondary">@color/black</item>
        <item name="colorOnBackground">@color/black</item>
        <item name="colorOnSurface">@color/black</item>
        <item name="colorOnError">@color/white</item>

        <item name="tabStyle">@style/TabLayout</item>
        <item name="bottomNavigationStyle">@style/BottomNavigationView</item>
        <!--<item name="android:navigationBarColor">@color/red_400</item>-->

<!--        <item name="android:itemTextAppearance">@style/PopupMenuTextAppearance</item>
        <item name="toolbarStyle">@style/ThemeOverlay.Toobar</item>-->

        <item name="textAppearanceHeadline1">@style/TextAppearance.MaterialComponents.Headline1</item>
        <item name="textAppearanceHeadline2">@style/TextAppearance.MaterialComponents.Headline2</item>
        <item name="textAppearanceHeadline3">@style/TextAppearance.MaterialComponents.Headline3</item>
        <item name="textAppearanceHeadline4">@style/TextAppearance.MaterialComponents.Headline4</item>
        <item name="textAppearanceHeadline5">@style/TextAppearance.MaterialComponents.Headline5</item>
        <item name="textAppearanceHeadline6">@style/TextAppearance.MaterialComponents.Headline6</item>
        <item name="textAppearanceSubtitle1">@style/TextAppearance.MaterialComponents.Subtitle1</item>
        <item name="textAppearanceSubtitle2">@style/TextAppearance.MaterialComponents.Subtitle2</item>
        <item name="textAppearanceBody1">@style/TextAppearance.MaterialComponents.Body1</item>
        <item name="textAppearanceBody2">@style/TextAppearance.MaterialComponents.Body2</item>
        <item name="textAppearanceCaption">@style/TextAppearance.MaterialComponents.Caption</item>
        <item name="textAppearanceButton">@style/TextAppearance.MaterialComponents.Button</item>
        <item name="textAppearanceOverline">@style/TextAppearance.MaterialComponents.Overline</item>
</style>




    <style name="Widget.MaterialComponents.CardView.Colored" parent="Widget.MaterialComponents.CardView">
        <item name="enforceMaterialTheme">true</item>
<!--
        <item name="android:stateListAnimator" ns1:ignore="NewApi">
            @animator/mtrl_card_state_list_anim
        </item>-->
        <item name="android:textColor">@color/white</item>
        <item name="cardBackgroundColor">?attr/colorPrimary</item>
        <item name="cardCornerRadius">8dp</item>
        <item name="cardElevation">@dimen/mtrl_card_elevation</item>
        <item name="cardForegroundColor">@color/mtrl_card_view_foreground</item>
        <item name="checkedIcon">@drawable/ic_mtrl_checked_circle</item>
        <item name="checkedIconTint">?attr/colorPrimary</item>
        <item name="checkedIconSize">@dimen/mtrl_card_checked_icon_size</item>
        <item name="checkedIconMargin">@dimen/mtrl_card_checked_icon_margin</item>
        <item name="rippleColor">@color/mtrl_card_view_ripple</item>
        <item name="shapeAppearance">?attr/shapeAppearanceMediumComponent</item>
    </style>
<!--

    <style name="ThemeOverlay.Toobar" parent="Widget.MaterialComponents.Toolbar.PrimarySurface">

        &lt;!&ndash; Text color &ndash;&gt;
        <item name="android:editTextColor">?attr/colorOnPrimary</item>
        &lt;!&ndash; Hint text color &ndash;&gt;
        <item name="android:textColorHint">?attr/colorOnPrimary</item>
    </style>


    <style name="MyActionBarWidgetTheme">
        <item name="android:textColorSecondary">@android:color/white</item>
    </style>

    <style name="PopupMenuTextAppearance" parent="TextAppearance.AppCompat.Menu">
        <item name="android:textColor">?attr/colorOnBackground</item>
    </style>
-->
</resources>